# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum DistinctFieldsForMessages {
  body
  messageId
  receiverNumber
  senderNumber
  senderPlatform
  userId
}

input FilterDateInput {
  _eq: DateTime
  _gt: DateTime
  _gte: DateTime
  _in: [DateTime!]
  _is_null: Boolean
  _lt: DateTime
  _lte: DateTime
  _neq: DateTime
  _nin: [DateTime!]
}

input FilterStringInput {
  _contains: String
  _ends_with: String
  _eq: String
  _in: [String!]
  _is_null: Boolean
  _neq: String
  _nin: [String!]
  _starts_with: String
}

type Message {
  """The body of message"""
  body: String!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!

  """The message id generated by AWS SNS"""
  messageId: String!

  """The phone number of receiver"""
  receiverNumber: String!

  """The phone number of sender"""
  senderNumber: String!

  """The platform name which sends the message from"""
  senderPlatform: String!

  """Identifies the date and time when the object was last updated"""
  updatedAt: DateTime!

  """The message id generated by AWS SNS"""
  userId: String!
}

input MessageFilterInput {
  _and: [MessageFilterInput!]
  _not: [MessageFilterInput!]
  _or: [MessageFilterInput!]
  body: FilterStringInput
  createdAt: FilterDateInput
  messageId: FilterStringInput
  receiverNumber: FilterStringInput
  senderNumber: FilterStringInput
  senderPlatform: FilterStringInput
  updatedAt: FilterDateInput
  userId: FilterStringInput
}

input MessageInput {
  body: String!
  receiverNumber: String!
  senderNumber: String!
  senderPlatform: String
  userId: String!
}

input MessageOrderInput {
  direction: OrderDirection!
}

type MessagesWithInfo {
  """The limit of pagination"""
  limit: Int

  """All messages"""
  messages: [Message!]

  """The offset of pagination"""
  offset: Int

  """The total count of messages"""
  total: Int
}

type Mutation {
  deleteMessage(id: String!): Message!
  sendMessage(data: MessageInput!): Message!
}

"""
Possible direction in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  ASC
  DESC
}

type Query {
  getMessage(id: String!): Message!
  getMessages(distinct: DistinctFieldsForMessages, limit: Int = 10, offset: Int = 0, order_by: [MessageOrderInput!], where: MessageFilterInput): MessagesWithInfo!
  getMyMessages(distinct: DistinctFieldsForMessages, limit: Int = 10, offset: Int = 0, order_by: [MessageOrderInput!], where: MessageFilterInput): MessagesWithInfo!
}